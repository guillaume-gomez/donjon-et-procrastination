{"version":3,"file":"static/css/main.1d5d523e.css","mappings":"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","sources":["index.css","App.scss","components/Generator.css","components/RandomWord.css","components/RandomWords.css","../node_modules/pixel-borders/src/styles/pixel-borders/_pixel-borders.scss","../node_modules/pixel-borders/src/styles/pixel-borders/_pixel-borders-mixins.scss","components/Button.scss"],"sourcesContent":[":root{\n  --brown: #331803;\n}\n\n\na {\n  margin: 0.5rem;\n  color: #99715e;\n}\n\n\nbody {\n  margin: 0;\n  font-family: \"dogicapixel\", -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  background: var(--brown);\n  background-image: url(\"./images/background.png\");\n  //overflow: hidden;\n  line-height: 1.5rem;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n\n@font-face {\n  font-family: \"dogicapixel\";\n  src: local(\"dogicapixel\"),\n  url(\"./fonts/dogicapixel.ttf\") format(\"truetype\");\n}",".App {\n  //border: 2px solid blue;\n\n}\n\n.main-container {\n  //border: 2px solid red;\n  //height: 100vh;\n  display: flex;\n  flex-direction: column;\n}\n\n.body-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 3rem;\n  padding: 2rem;\n  //border: 2px solid purple;\n  max-width: 90%;\n  height: 50%;\n  margin: auto\n}\n\n.logo-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  max-width: 50%\n}\n\n.footer {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 0.5rem;\n  border: 4px solid #a85d33;\n  color: #76321b;\n  word-break: break-word;\n  background: #ffd392;\n  padding: 1rem 1rem;\n}\n\n.background-castle {\n    position: absolute;\n    z-index: -1;\n    width: 100%;\n    height: 100%;\n    background-image: url(\"./images/background-01.png\");\n\n}\n\n.background-cloud1 {\n    position: absolute;\n    z-index: -1;\n    width: 100%;\n    height: 100%;\n    background-image: url(\"./images/background-02.png\");\n\n}\n\n.background-cloud2 {\n    position: absolute;\n    z-index: -1;\n    width: 100%;\n    height: 100%;\n    background-image: url(\"./images/background-03.png\");\n}\n\n\n@media only screen and (max-width: 768px) {\n  .logo-container {\n    max-width: 100%\n  }\n\n  #images {\n    display: none;\n  }\n}","#generator-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 2rem;\n  //border: 2px solid green;\n  width: 100%;\n}\n\n#words-container {\n  display: flex;\n  //border:2px solid #ababab;\n}\n\n@media only screen and (max-width: 768px) {\n  #words-container {\n    flex-direction: column;\n  }\n}",".random-word-container {\n    display: flex;\n    //border: 2px solid green;\n}\n","#random-words-container {\n    padding: 1rem;\n    color: #76321b;\n    background: #ffd392;\n    border: 4px solid #a85d33;\n    font-size: 30px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-wrap: wrap;\n    gap:  0.5rem;\n}\n\n@media only screen and (max-width: 900px) {\n  #random-words-container {\n    font-size: 14px;\n  }\n}\n\n@media only screen and (max-width: 1050px) {\n  #random-words-container {\n    font-size: 20px;\n  }\n}","// ----- Border styles -----\n.pixel-borders {\n  position: relative;\n  display: inline-block;\n  margin: 0 15px 15px 0;\n  padding: 15px 20px;\n  background-color: #fff;\n  font-family: \"Press Start 2P\", Arial Black, Arial Bold, Arial, sans-serif;\n}\n\n\n// One pixel borders\n.pixel-borders--1 {\n  @include pixel-borders();\n}\n\n.pixel-borders--1-inset {\n  @include pixel-borders($border-inset-color: #ddd);\n}\n\n\n// Two pixel borders\n.pixel-borders--2 {\n  @include pixel-borders($corner-size: 2);\n}\n\n.pixel-borders--2-inset {\n  @include pixel-borders($corner-size: 2);\n\n  &::after {\n    @include pixel-borders($corner-size: 1, $border-color: #ddd);\n\n    content: '';\n    position: absolute;\n    z-index: 0;\n    bottom: 0;\n    right: 0;\n    border-image-width: 0 1 1 0;\n    width: calc(100% - 4px);\n    height: calc(100% - 4px);\n  }\n}\n\n\n\n// Examples using the pixel box mixin to colour code the elements\n.pixel-box--light {\n  @include pixel-box($corner-size: 1, $border-size: 4px, $background-color: #fff);\n}\n\n.pixel-box--primary {\n  color: #fff;\n  @include pixel-box($corner-size: 1, $border-size: 4px, $background-color: #209cee);\n}\n\n.pixel-box--success {\n  color: #fff;\n  @include pixel-box($corner-size: 1, $border-size: 4px, $background-color: #92cc41);\n} \n\n.pixel-box--warning {\n  @include pixel-box($corner-size: 1, $border-size: 4px, $background-color: #f7d51d);\n} \n\n.pixel-box--error {\n  color: #fff;\n  @include pixel-box($corner-size: 1, $border-size: 4px, $background-color: #e76e55);\n} \n\n\n// Custom examples to show flexibility of the mixins\n.pixel-box--light-custom {\n  @include pixel-box($corner-size: 1, $border-size: 4px, $background-color: #fff, $border-inset-color: #999, $border-inset-sides: 'all');\n}\n\n.pixel-box--primary-custom {\n  color: #fff;\n  @include pixel-box($corner-size: 1, $border-size: 4px, $background-color: #209cee, $border-inset: false);\n}\n\n.pixel-box--success-custom {\n  color: #fff;\n  @include pixel-box($corner-size: 1, $border-size: 4px, $background-color: #92cc41, $border-inset-sides: 'top-left');\n} \n\n.pixel-box--warning-custom {\n  @include pixel-box($corner-size: 1, $border-size: 4px, $background-color: #f7d51d, $border-inset-sides: 'all');\n} \n\n.pixel-box--error-custom {\n  color: #fff;\n  @include pixel-box($corner-size: 1, $border-size: 4px, $background-color: #e76e55, $border-color: #000);\n} \n","// Generate SVG image for pixelated corners\n@function pixel-borders-image($corner-size, $color) {\n  $svg: '';\n  $svg-path: '';\n  $svg-size: $corner-size * 6;\n  $color: str-replace('' + $color, '#', '%23');\n\n  @if $corner-size == 1 {\n    $svg-path: 'M0 2h2v2H0zM2 0h2v2H2zM4 2h2v2H4zM2 4h2v2H2z';\n  } @else {\n    $svg-path: 'M2 2h2v2H2zM4 0h2v2H4zM10 4h2v2h-2zM0 4h2v2H0zM6 0h2v2H6zM8 2h2v2H8zM8 8h2v2H8zM6 10h2v2H6zM0 6h2v2H0zM10 6h2v2h-2zM4 10h2v2H4zM2 8h2v2H2z';\n  }\n\n  $svg: 'data:image/svg+xml,<svg xmlns=\\'http://www.w3.org/2000/svg\\' width=\\'#{$svg-size}\\' height=\\'#{$svg-size}\\'><path d=\\'#{$svg-path}\\' fill=\\'#{$color}\\' /></svg>';\n\n  @return $svg;\n}\n\n\n// String replace function - replace `$search` with `$replace` in `$string`\n@function str-replace($string, $search, $replace: '') {\n  $index: str-index($string, $search);\n\n  @if $index {\n    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);\n  }\n\n  @return $string;\n}\n\n\n// Pixel border\n@mixin pixel-borders($corner-size: 1, $border-size: 4px, $border-color: #000, $border-inset-color: false) {\n\n  @supports (border-image-source: none) {\n    border-radius: ($border-size * ($corner-size + 2)) + ($corner-size * 2);\n  }\n\n  border-style: solid;\n  border-width: $border-size;\n  border-color: $border-color;\n\n  border-image-slice: $corner-size * 2;\n  border-image-width: $corner-size;\n  border-image-outset: 0;\n\n  border-image-source: url(pixel-borders-image($corner-size, $border-color));\n\n  @if $border-inset-color {\n    @include pixel-inset-border($border-size, $border-inset-color);\n  }\n\n}\n\n\n// Pixel inset border\n@mixin pixel-inset-border($border-inset-size: 4px, $border-inset-color: #ddd, $border-inset-sides: 'bottom-right', $border-inset-color-br: false, $border-inset-color-tl: false) {\n\n  $box-shadow: '';\n  @if not($border-inset-color-br) {\n    $border-inset-color-br: $border-inset-color;\n  }\n\n  @if not($border-inset-color-tl) {\n    $border-inset-color-tl: $border-inset-color;\n  }\n\n  position: relative;\n\n  &::after {\n    content: '';\n    position: absolute;\n    z-index: 0;\n    bottom: 0;\n    right: 0;\n    width: 100%;\n    height: 100%;\n\n    @if $border-inset-sides == 'bottom-right' or $border-inset-sides == false {\n      $box-shadow: inset -#{$border-inset-size} -#{$border-inset-size} $border-inset-color-br;\n    }\n\n    @if $border-inset-sides == 'top-left' {\n      $box-shadow: inset $border-inset-size $border-inset-size $border-inset-color-tl;\n    }\n\n    @if $border-inset-sides == 'all' {\n      $box-shadow: inset -#{$border-inset-size} -#{$border-inset-size} $border-inset-color-br, inset $border-inset-size $border-inset-size $border-inset-color-tl;\n    }\n\n    box-shadow: $box-shadow;\n  }\n\n}\n\n\n\n// Pixel box - Colours for border and inset are calculated using $background-color unless $border-color is passed\n@mixin pixel-box($corner-size, $border-size, $background-color, $border-color: false, $border-inset: true, $border-inset-size: false, $border-inset-color: false, $border-inset-sides: false, $border-inset-color-br: false, $border-inset-color-tl: false) {\n  \n  $background-color-hover: darken($background-color, 5);\n\n  @if not($border-color) {\n    $border-color: darken($background-color, 20);\n  }\n\n  @include pixel-borders($corner-size: $corner-size, $border-size: $border-size, $border-color: $border-color);\n\n  @if $border-inset-sides == 'all' and not($border-inset-color) {\n    $border-inset-color-br: darken($background-color, 10);\n    $border-inset-color-tl: lighten($background-color, 15);\n  }\n\n  @if not($border-inset-color) { \n    $border-inset-color: darken($background-color, 10);\n  }\n\n  @if $border-inset-sides == 'top-left' {\n    $border-inset-color: lighten($background-color, 15);\n  }\n\n\n  @if $border-inset { \n    @include pixel-inset-border($border-inset-size: $border-size, $border-inset-color: $border-inset-color, $border-inset-sides: $border-inset-sides, $border-inset-color-br: $border-inset-color-br, $border-inset-color-tl: $border-inset-color-tl);\n  }\n\n  background-color: $background-color;\n\n  &:hover, &:focus {\n    background-color: $background-color-hover;\n  }\n\n}\n","@import \"node_modules/pixel-borders/src/styles/pixel-borders.scss\";\n\n.pixel-borders-custom {\n  color: #fff;\n  @include pixel-box($corner-size: 1, $border-size: 4px, $background-color: #b7291d, $border-color: #ffa46d, $border-inset-color: #8c5634);\n}\n\n.pixel-borders-custom:hover {\n  cursor: pointer;\n  background: #b7291d;\n}\n\n@media only screen and (max-width: 768px) {\n  #imageLogo {\n    width: 100px;\n  }\n}"],"names":[],"sourceRoot":""}